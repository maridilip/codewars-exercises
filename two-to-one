/*

Take 2 strings s1 and s2 including only letters from ato z. Return a new sorted string, the longest possible, containing distinct letters - each taken only once - coming from s1 or s2.
Examples:

a = "xyaabbbccccdefww"
b = "xxxxyyyyabklmopq"
longest(a, b) -> "abcdefklmopqwxy"

a = "abcdefghijklmnopqrstuvwxyz"
longest(a, a) -> "abcdefghijklmnopqrstuvwxyz"

*/

function longest(s1, s2) {
  // your code
  s1=s1.split('').sort((a, b) => a.localeCompare(b));
  s2=s2.split('').sort((a, b) => a.localeCompare(b));
  var arr3 = s1.concat(s2).sort((a, b) => a.localeCompare(b));
  return uniq(arr3).join('');
}

function uniq(a) {
    return a.sort().filter(function(item, pos, ary) {
        return !pos || item != ary[pos - 1];
    })
}
